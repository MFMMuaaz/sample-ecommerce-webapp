[{"F:\\Wavenet\\Task\\client\\src\\index.js":"1","F:\\Wavenet\\Task\\client\\src\\App.js":"2","F:\\Wavenet\\Task\\client\\src\\pages\\Home.js":"3","F:\\Wavenet\\Task\\client\\src\\components\\Products.js":"4","F:\\Wavenet\\Task\\client\\src\\components\\Categories.js":"5","F:\\Wavenet\\Task\\client\\src\\components\\ProductsList.js":"6","F:\\Wavenet\\Task\\client\\src\\components\\Product.js":"7","F:\\Wavenet\\Task\\client\\src\\pages\\Product.js":"8","F:\\Wavenet\\Task\\client\\src\\components\\ImageSlider.js":"9","F:\\Wavenet\\Task\\client\\src\\configurations\\config.js":"10"},{"size":197,"mtime":1612258389378,"results":"11","hashOfConfig":"12"},{"size":379,"mtime":1612501706480,"results":"13","hashOfConfig":"12"},{"size":1738,"mtime":1612463396530,"results":"14","hashOfConfig":"12"},{"size":1695,"mtime":1612598244546,"results":"15","hashOfConfig":"12"},{"size":1166,"mtime":1612598085219,"results":"16","hashOfConfig":"12"},{"size":1126,"mtime":1612598350429,"results":"17","hashOfConfig":"12"},{"size":1288,"mtime":1612501820323,"results":"18","hashOfConfig":"12"},{"size":661,"mtime":1612579084417,"results":"19","hashOfConfig":"12"},{"size":1993,"mtime":1612598149363,"results":"20","hashOfConfig":"12"},{"size":112,"mtime":1612606737447,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"8p61tz",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\Wavenet\\Task\\client\\src\\index.js",[],["48","49"],"F:\\Wavenet\\Task\\client\\src\\App.js",[],"F:\\Wavenet\\Task\\client\\src\\pages\\Home.js",[],"F:\\Wavenet\\Task\\client\\src\\components\\Products.js",[],"F:\\Wavenet\\Task\\client\\src\\components\\Categories.js",["50"],"import React from 'react'\r\nimport Axios from 'axios'\r\nimport '../App.css'\r\nimport { server, port } from '../configurations/config'\r\n\r\nfunction Categories({ categories, changeCurrentCategory, changeCurrentCategories }) {\r\n\r\n    React.useEffect(() => {\r\n        Axios.get(`${server}:${port}/category`)\r\n            .then(response => {\r\n                console.log(response.data.message);\r\n                changeCurrentCategories(response.data.message)\r\n            })\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"categories-pane\">\r\n            <h1>Categories</h1>\r\n            <ul className=\"category-list\">\r\n                {\r\n                    categories.map(category => {\r\n                        return (\r\n                            <li\r\n                                className=\"row\"\r\n                                key={category.id} onClick={() => { changeCurrentCategory(category) }}>\r\n                                <dev id=\"title\">{category.category_name}</dev>\r\n                            </li>\r\n                        );\r\n                    })\r\n                }\r\n            </ul>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default Categories\r\n","F:\\Wavenet\\Task\\client\\src\\components\\ProductsList.js",["51"],"import React from 'react'\r\nimport '../App.css'\r\nimport axios from 'axios'\r\nimport { server, port } from '../configurations/config'\r\n\r\nfunction ProductsList({ currentCategoryId, currentCategoryName, products, changeCurrentProducts }) {\r\n\r\n    React.useEffect(() => {\r\n        axios.get(`${server}:${port}/ ${currentCategoryId} /products`)\r\n            .then(response => {\r\n                console.log(response.data.message);\r\n                changeCurrentProducts(response.data.message)\r\n            })\r\n    }, [currentCategoryId])\r\n\r\n    return (\r\n        <div className=\"products-list-pane\">\r\n            <h1 id=\"title\">{currentCategoryName}</h1>\r\n            <ul className=\"product-list\">\r\n                {\r\n                    products.map(product => {\r\n                        return (\r\n                            <li className=\"row\" key={product.product_id}>\r\n                                <dev>{product.product_name}</dev>\r\n                            </li>\r\n                        );\r\n                    })\r\n                }\r\n            </ul>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default ProductsList\r\n\r\n\r\n\r\n\r\n","F:\\Wavenet\\Task\\client\\src\\components\\Product.js",["52"],"import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Product({ product, image }) {\r\n\r\n    return (\r\n        <div className=\"product\">\r\n            <dev id=\"title\">{product.product_name}</dev>\r\n            <dev className=\"product-container\">\r\n                <dev className=\"image-container\">\r\n                    <Link to={'/product/' + product.product_id + \"/\" + product.product_name + \"/\" + product.price + \"/\" + product.size + \"/\" + product.rating}>\r\n                        <img src={image} />\r\n                    </Link>\r\n                </dev>\r\n                <dev className=\"product-detail-container\">\r\n                    <dev>\r\n                        <dev className=\"tag\">Price:</dev>\r\n                        <dev className=\"value\">{product.price}</dev>\r\n                    </dev>\r\n                    <dev>\r\n                        <dev className=\"tag\">Size:</dev>\r\n                        <dev className=\"value\">{product.size}</dev>\r\n                    </dev>\r\n                    <dev>\r\n                        <dev className=\"tag\">Rating:</dev>\r\n                        <dev className=\"value\">{product.rating}</dev>\r\n                    </dev>\r\n                </dev>\r\n            </dev>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Product\r\n",["53","54"],"F:\\Wavenet\\Task\\client\\src\\pages\\Product.js",[],"F:\\Wavenet\\Task\\client\\src\\components\\ImageSlider.js",["55","56"],"import React from 'react'\r\nimport { FaArrowCircleRight, FaArrowCircleLeft } from 'react-icons/fa'\r\nimport axios from 'axios'\r\nimport { server, port } from '../configurations/config'\r\n\r\nfunction ImageSlider({ productId }) {\r\n    const [currentProductImages, setCurrentProductImages] = React.useState([])\r\n    const [currentImg, setCurrentImg] = React.useState(0)\r\n\r\n    const length = currentProductImages.length\r\n\r\n    const changeCurrentProductImages = (images) => {\r\n        setCurrentProductImages(images)\r\n    }\r\n    console.log(currentImg)\r\n    const prevSlide = () => {\r\n        setCurrentImg(() => {\r\n            return (\r\n                currentImg === 0 ? length - 1 : currentImg - 1)\r\n        })\r\n    }\r\n\r\n    const nextSlide = () => {\r\n        setCurrentImg((currentImg + 1) % length)\r\n    }\r\n\r\n    //Getting all images related to the current product\r\n    React.useEffect(() => {\r\n        axios.get(`${server}:${port}/images/product/${productId}`)\r\n            .then(response => {\r\n                console.log(response.data);\r\n                changeCurrentProductImages(response.data)\r\n            })\r\n    }, [])\r\n\r\n    const constructImagePath = ({ image_location, image_name, extension }) => {\r\n        console.log(image_location + \"/\" + image_name + \".\" + extension)\r\n        return (image_location + \"/\" + image_name + \".\" + extension)\r\n    }\r\n\r\n    return (\r\n        <section className=\"slider\">\r\n            <FaArrowCircleLeft className=\"left-arrow\" onClick={prevSlide} />\r\n\r\n            {currentProductImages.map((image, index) => {\r\n                return (\r\n                    <dev className={index === currentImg ? \"slide active\" : \"slide\"} key={index}>\r\n\r\n                        {index === currentImg && <img src={constructImagePath(image)} className=\"image\" />}\r\n                    </dev>\r\n                );\r\n            })}\r\n            <FaArrowCircleRight className=\"right-arrow\" onClick={nextSlide} />\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default ImageSlider\r\n","F:\\Wavenet\\Task\\client\\src\\configurations\\config.js",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":14,"column":8,"nodeType":"63","endLine":14,"endColumn":10,"suggestions":"64"},{"ruleId":"61","severity":1,"message":"65","line":14,"column":8,"nodeType":"63","endLine":14,"endColumn":27,"suggestions":"66"},{"ruleId":"67","severity":1,"message":"68","line":12,"column":25,"nodeType":"69","endLine":12,"endColumn":44},{"ruleId":"57","replacedBy":"70"},{"ruleId":"59","replacedBy":"71"},{"ruleId":"61","severity":1,"message":"72","line":34,"column":8,"nodeType":"63","endLine":34,"endColumn":10,"suggestions":"73"},{"ruleId":"67","severity":1,"message":"68","line":49,"column":50,"nodeType":"69","endLine":49,"endColumn":107},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'changeCurrentCategories'. Either include it or remove the dependency array. If 'changeCurrentCategories' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["76"],"React Hook React.useEffect has a missing dependency: 'changeCurrentProducts'. Either include it or remove the dependency array. If 'changeCurrentProducts' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["77"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["74"],["75"],"React Hook React.useEffect has a missing dependency: 'productId'. Either include it or remove the dependency array.",["78"],"no-global-assign","no-unsafe-negation",{"desc":"79","fix":"80"},{"desc":"81","fix":"82"},{"desc":"83","fix":"84"},"Update the dependencies array to be: [changeCurrentCategories]",{"range":"85","text":"86"},"Update the dependencies array to be: [changeCurrentProducts, currentCategoryId]",{"range":"87","text":"88"},"Update the dependencies array to be: [productId]",{"range":"89","text":"90"},[474,476],"[changeCurrentCategories]",[510,529],"[changeCurrentProducts, currentCategoryId]",[1120,1122],"[productId]"]